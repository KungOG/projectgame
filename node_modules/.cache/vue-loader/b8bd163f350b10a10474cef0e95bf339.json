{"remainingRequest":"/Users/asahildingsson/Desktop/Projekt/Vue-Game/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/asahildingsson/Desktop/Projekt/Vue-Game/src/views/PlayGame.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/asahildingsson/Desktop/Projekt/Vue-Game/src/views/PlayGame.vue","mtime":1546090059000},{"path":"/Users/asahildingsson/Desktop/Projekt/Vue-Game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asahildingsson/Desktop/Projekt/Vue-Game/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/asahildingsson/Desktop/Projekt/Vue-Game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asahildingsson/Desktop/Projekt/Vue-Game/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Timer from '@/components/Timer.vue'\nimport {db} from '../firebase-config'\n\nexport default {\n  name: 'PlayGame',\n  data: function () {\n    return {\n      numberKeys: [],\n      show: true\n    }\n  },\n  firebase: {\n  questions: db.ref('questions')\n  },\n\n  components: {\n    Timer\n  },\n\n  computed: {\n      value() {\n        return this.$store.getters.value;\n      },\n      number() {\n        return this.$store.state.number;\n      },\n      bot() {\n        return this.$store.state.bot;\n      }\n    },\n\n  methods: {\n      stop() {\n        this.$refs.form.stop()\n      },\n      start() {\n        this.$refs.form.start()\n      },\n      reset() {\n        this.$refs.form.reset()\n      },\n      newValue(event) {\n        this.$store.dispatch('newValue', event.target.value)\n      },\n      ranNumBot() {\n        this.$store.state.bot = Math.floor(Math.random() * 100) + 1;\n      },\n      makeGuess(value, number, bot) {\n        if(this.value < this.questions[this.number].answer){\n          this.stop()\n          alert(\"högre\");\n          this.ranNumBot();\n          this.reset()\n          this.start()\n\n        }\n        else if (this.value > this.questions[this.number].answer){\n          this.stop()\n          alert(\"lägre\");\n          this.ranNumBot();\n          this.reset()\n          this.start()\n        }\n        else {\n          this.show = false\n          this.stop()\n          this.$router.push({ path: 'winner' })\n        }\n      },\n      OnlyNumbers(e) {\n        var keyCode = e.which;\n        var ret = ((keyCode >= 48 && keyCode <= 57) || this.numberKeys.indexOf(keyCode) != -1);\n        document.getElementById(\"errormess\").style.display = ret ? \"none\" : \"inline\";\n        return ret;\n     }\n    }\n};\n\n",{"version":3,"sources":["PlayGame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PlayGame.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"app\">\n    <h3>Question</h3>\n    <h1>{{questions[number].question}}</h1>\n    <input  @input=\"newValue\" type=\"number\" onfocus=\"this.value=''\" v-on:keypress = \"OnlyNumbers\"/>\n    <button class=\"guessbutton\" @click=\"makeGuess\">Make a guess</button>\n    <span id=\"errormess\" style=\"color: orangered; display: none\"><br><br>* Endast siffror! </span>\n    <Timer v-show=\"show\" ref=\"form\"/>\n    <p>My guess: {{value}} </p>\n    <p>Bot guess: {{bot}} </p>\n  </div>\n</template>\n\n<script>\n\nimport Timer from '@/components/Timer.vue'\nimport {db} from '../firebase-config'\n\nexport default {\n  name: 'PlayGame',\n  data: function () {\n    return {\n      numberKeys: [],\n      show: true\n    }\n  },\n  firebase: {\n  questions: db.ref('questions')\n  },\n\n  components: {\n    Timer\n  },\n\n  computed: {\n      value() {\n        return this.$store.getters.value;\n      },\n      number() {\n        return this.$store.state.number;\n      },\n      bot() {\n        return this.$store.state.bot;\n      }\n    },\n\n  methods: {\n      stop() {\n        this.$refs.form.stop()\n      },\n      start() {\n        this.$refs.form.start()\n      },\n      reset() {\n        this.$refs.form.reset()\n      },\n      newValue(event) {\n        this.$store.dispatch('newValue', event.target.value)\n      },\n      ranNumBot() {\n        this.$store.state.bot = Math.floor(Math.random() * 100) + 1;\n      },\n      makeGuess(value, number, bot) {\n        if(this.value < this.questions[this.number].answer){\n          this.stop()\n          alert(\"högre\");\n          this.ranNumBot();\n          this.reset()\n          this.start()\n\n        }\n        else if (this.value > this.questions[this.number].answer){\n          this.stop()\n          alert(\"lägre\");\n          this.ranNumBot();\n          this.reset()\n          this.start()\n        }\n        else {\n          this.show = false\n          this.stop()\n          this.$router.push({ path: 'winner' })\n        }\n      },\n      OnlyNumbers(e) {\n        var keyCode = e.which;\n        var ret = ((keyCode >= 48 && keyCode <= 57) || this.numberKeys.indexOf(keyCode) != -1);\n        document.getElementById(\"errormess\").style.display = ret ? \"none\" : \"inline\";\n        return ret;\n     }\n    }\n};\n\n</script>\n"]}]}